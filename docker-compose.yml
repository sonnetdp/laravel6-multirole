version: '3.5'

networks:
  multi-role-auth-net:
    driver: bridge
    name: multi-role-auth-net

volumes:
  multi-role-auth-mysql-data:
    driver: local
    name: multi-role-auth-mysql-data
  
  multi-role-auth-redis-data:
    driver: local
    name: multi-role-auth-redis-data

services:
  multi-role-auth-app:
    build:
      context: ./docker/app
      dockerfile: Dockerfile
    image: dreamarray.com/app
    container_name: multi-role-auth-app
    volumes:
     - .:/var/www/html
    ports:
      - "${APP_PORT}:80"
    networks:
      - multi-role-auth-net
  
  multi-role-auth-mysql:
    build:
      context: ./docker/mysql
      dockerfile: Dockerfile
    image: dreamarray.com/mysql
    container_name: multi-role-auth-mysql
    ports:
      - "${DB_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASS}"
      MYSQL_DATABASE: "${DB_NAME}"
      MYSQL_USER: "${DB_USER}"
      MYSQL_PASSWORD: "${DB_PASS}"
    volumes:
     - multi-role-auth-mysql-data:/var/lib/mysql
    networks:
      - multi-role-auth-net
  
  multi-role-auth-redis:
    image: redis:alpine
    container_name: multi-role-auth-redis
    volumes:
     - multi-role-auth-redis-data:/data
    networks:
     - multi-role-auth-net
